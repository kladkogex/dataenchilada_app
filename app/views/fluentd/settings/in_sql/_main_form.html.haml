- content_for(:page_title) do
  = "#{t("fluentd.settings.page_#{action_type}")} #{t(".page_title")}"

.gx-form-md
  = vertical_simple_form_for(@agent, url: plugin_setting_form_action_url, defaults: { input_html: { class: "new-input" } }) do |f|
    .tab-content
      #source.tab-pane.fade.in.active
        =render 'shared/sidebar_header', main: t(".page_title"), gray: t("fluentd.settings.page_#{action_type}") , decsription: 'Read records from RDBMSes periodically.'

        -#%h1.page-header
          = "#{t("fluentd.settings.page_#{action_type}")} #{t(".page_title")}"

        -#.well
          = raw t(".option_guide")
        .padd_top_md.padd_bott_md
          = f.input :title, label: 'Name of agent', placeholder: "My new agent", input_html: {class: "new-input", value: nil}
        -#= f.input :tag, label: 'Tag', input_html: {class: "form-control"}

        = render "shared/setting_errors"

        - # NOTE: plugin_setting_form_action_url is defined at SettingConcern
        -#= form_for(@setting, url: action, html: {class: "ignore-rails-error-div"}) do |f|

        .roww
          .col-xs-44
            %h3.bold Database

            = f.simple_fields_for :source do |f_source|
              - @agent.source.common_options.each do |key|
                =render 'shared/form/agent_conf_field', agent: @agent, key: key, f_source: f_source

              - if @agent.source.advanced_options.present?
                .fl-cont.fl-center.padd_top_30.padd_bott_30{style:"justify-content: flex-start;"}
                  .fl-wrap.fl-growr
                    %h3.h-txt.bold.no_marg.marg_bott_sm Advanced settings
                    .clearfix
                    %h6.gr.no_marg  Click on the arrow to set advanced settings.
                  .fl-wrap.padd_left_big
                    %button.mdc-fab.mdc-fab--mini.lite-blue{style:" box-shadow: none;", "data-toggle" => "collapse", "href" => "#advanced-setting"}
                      =inline_svg 'icons/down.svg', class: 'gex-svg round-btn-icon'

                #advanced-setting.collapse
                  .padd_bott_md
                    - @agent.source.advanced_options.each do |key|
                      =render 'shared/form/agent_conf_field', agent: @agent, key: key, f_source: f_source


                -#.well.well-sm
                  %h4{"data-toggle" => "collapse", "href" => "#advanced-setting"}
                    = icon('fa-caret-down')
                    = t('terms.advanced_setting')
                  #advanced-setting.collapse
                    - @agent.source.advanced_options.each do |key|
                      - v = @agent.source.details.attributes[key.to_s]
                      = f_source.input key.to_sym, :input_html => { :value => v, class: "form-control"}
                      -#- binding.pry
                      - if @agent.source.try(:fields_descriptions).present?
                        %small.form-text.text-muted= @agent.source.fields_descriptions[key]
                      -#= field(f, key)
                  -#.form-group
                  -#  = f.check_box :all_tables
                  -#  = f.label :all_tables
                  -#  %br
                  -#  %small.form-text.text-muted
                  -#    = @setting.fields_descriptions[:all_tables]
          -#.col-xs-8#tables-column{style: ("display: none" if @setting.all_tables)}

          .col-xs-88#tables-column
            .padd_bott_10
              %h3.bold Tables
            -#.col-xs-12.well
            -#  %button#add-table.btn.btn-avg.btn-success= t('.add_table')
            -#  %small.form-text.text-muted.pull-right
            -#    = t('.no_table_notice')
            #tables_container
              - if @agent.source.tables.present?
                - @agent.source.tables.each_with_index do |table, index|
                  = render partial: 'fluentd/settings/in_sql/table_form', locals: {table: table, index: index, table_count: @agent.source.tables.size}

        - if @section_id.present?
          = hidden_field_tag :id, @section_id
        .pull-right.padd_top_md
          %a.undec.mdc-button.gex-btn-new.scroll-top.go-to-output{data: {toggle: :tab}, href: '#outputs'} Next
        -#= f.submit t('fluentd.common.finish'), class: "btn btn-lg btn-primary pull-left"
      = render 'shared/settings/outputs', f: f

-#:javascript
-#  function updateTables() {
-#    var text_blocks = $('.table-block');
-#    if (text_blocks.length == 1) {
-#      $('.remove-table-block').hide();
-#    } else {
-#      $('.remove-table-block').show();
-#    }
-#    text_blocks.each(function(index){$(this).find('h4 span').text(index+1)});
-#  }
-#
-#  $('#tables_container').on('click', '.remove-table-block', function(e) {
-#    e.preventDefault();
-#    if (confirm('Are you sure to delete this table?')) {
-#      $(this).closest('.table-block').remove();
-#      updateTables();
-#    }
-#  });
-#
-#  $('#add-table').click(function(e) {
-#    e.preventDefault();
-#    var html = "#{escape_javascript(render partial: 'fluentd/settings/in_sql/table_form', locals: {table: @agent.source.tables.first.class.new, index: rand(99..9999), table_count: 2})}";
-#    $('#tables_container').append(html);
-#    updateTables();
-#  });
-#
-#  // $('#fluentd_setting_in_sql_all_tables').change(function() {
-#  //   var text_blocks = $('.table-block');
-#  //   if ($(this).prop('checked')) {
-#  //     $('#tables-column').hide();
-#  //   } else if (!$(this).prop('checked')) {
-#  //     $('#tables-column').show();
-#  //   }
-#  // });
